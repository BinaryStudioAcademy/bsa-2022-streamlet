name: Deploy staging

on:
  push:
    branches:
      - development
  workflow_dispatch:

jobs:
  build-backend:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Build image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ github.GITHUB_REPOSITORY }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image_name: streamlet-backend-dev
          registry: ghcr.io
          image_tag: latest
          context: ./
          dockerfile: ./.docker/backend.Dockerfile
          push_image_and_stages: false

  build-frontend:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ github.GITHUB_REPOSITORY }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image_name: streamlet-frontend-dev
          registry: ghcr.io
          image_tag: latest
          context: ./
          dockerfile: ./.docker/frontend.Dockerfile
          push_image_and_stages: false

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy docker-compose.dev.yml to deployment server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_SSH_PASSWORD }}
          source: .docker/docker-compose.dev.yml
          target: app

      - name: Run docker-compose.dev.yml on deployment server
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_SSH_PASSWORD }}
          envs: GITHUB_USERNAME,GITHUB_TOKEN
          script: |
            cd app/.docker/
            export GITHUB_USERNAME=$GITHUB_USERNAME
            export GITHUB_TOKEN=$GITHUB_TOKEN
            echo "$GITHUB_TOKEN" | sudo docker login ghcr.io -u $GITHUB_USERNAME --password-stdin
            sudo docker compose -f docker-compose.dev.yml pull
            sudo docker compose -f docker-compose.dev.yml stop
            sudo docker compose -f docker-compose.dev.yml up -d --build

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    environment: development
    steps:
      - name: Trigger this job at the end of workflow
        uses: technote-space/workflow-conclusion-action@v2

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: Deployment Bot
          SLACK_ICON: https://avatar-prod-us-east-2.webexcontent.com/Avtr~V1~6078fba4-49d9-4291-9f7b-80116aab6974/V1~8d90dcca-87c5-4a7c-9808-8965a02be966~07b1fecf53a948688dabf01402621a0a
          SLACK_MESSAGE: "Deployment finished with ${{ env.WORKFLOW_CONCLUSION == 'success' && 'Success ðŸŸ¢' || env.WORKFLOW_CONCLUSION == 'cancelled' && 'Cancelled ðŸŸ¡' || env.WORKFLOW_CONCLUSION == 'skipped' && 'Skipped ðŸ”µ' || 'Error ðŸ”´' }} result"
          SLACK_FOOTER: "Git branch: `development`"
          MSG_MINIMAL: event,actions url
